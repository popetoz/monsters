{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","changeHandler","type","onChange","App","changeSearchField","e","setState","searchField","target","value","filterMonsters","state","filter","toLowerCase","includes","fetch","then","res","json","catch","console","log","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,OAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCPXC,EAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLdM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,cAAhB,OACvB,uBACEC,KAAK,SACLb,UAAU,SACVW,YAAaA,EACbG,SAAUF,MCgDCG,E,kDAlDb,aAAe,IAAD,8BAGZ,gBAkBFC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAtB1B,EA0BdC,eAAiB,WAAO,IAAD,EACa,EAAKC,MAA/Bf,EADa,EACbA,SAAUW,EADG,EACHA,YAKlB,OAJyBX,EAASgB,QAAO,SAACrB,GAAD,OACvCA,EAAQE,KAAKoB,cAAcC,SAASP,EAAYM,mBAvBlD,EAAKF,MAAQ,CACXf,SAAU,GACVW,YAAa,IARH,E,qDAad,WAAqB,IAAD,OAClBQ,MAAM,oDACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACpB,GAAD,OAAc,EAAKU,SAAS,CAAEV,gBACnCuB,OAAM,SAACd,GAAD,OAAOe,QAAQC,IAAR,6BAAkChB,S,oBAmBpD,WAAU,IAAD,OACP,OACE,sBAAKjB,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CACEW,YAAY,uBACZC,cAAe,SAACK,GAAD,OAAO,EAAKD,kBAAkBC,MAE/C,cAAC,EAAD,CAAUT,SAAU0B,KAAKZ,0B,GA7Cfa,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.86f36c60.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card-style.css\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n      />\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./card-list-style.css\";\r\nimport { Card } from \"../card/card\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({ placeholder, changeHandler }) => (\r\n  <input\r\n    type=\"search\"\r\n    className=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={changeHandler}\r\n  />\r\n);\r\n\r\n/*\r\n * be careful when use a component\r\n * the first letter should be capital otherwise it will not work\r\n */\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list\";\nimport { SearchBox } from \"./components/search-box/search-box\";\n\nclass App extends Component {\n  constructor() {\n    // super call the constructor of the Component class\n    // after that we can access the properties inside the Component like state on class App\n    super();\n\n    // we can now access to an state\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  // component did mount\n  componentDidMount() {\n    fetch(\"https://pop-monster-names.herokuapp.com/monsters\")\n      .then((res) => res.json())\n      .then((monsters) => this.setState({ monsters }))\n      .catch((e) => console.log(`Error in fetching: ${e}`));\n  }\n\n  // change the state of searchField\n  changeSearchField = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  // filter monsters\n  filterMonsters = () => {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    // return the array of filtered monsters\n    return filteredMonsters;\n  };\n\n  // because of inheeritance we can use render method\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>My Family Monsters</h1>\n        <SearchBox\n          placeholder=\"Search for a monster\"\n          changeHandler={(e) => this.changeSearchField(e)}\n        />\n        <CardList monsters={this.filterMonsters()} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}